'''
Problem 3

The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?

This version marks the non-primes to avoid the costs of resizing lists after
   each number is removed. It also works for small numbers, but requires too
   much memory in the list_of_values initialization for the question test value

Solution:
Dave Cuthbert copyright 2017
License MIT
'''

import math

def create_list_of_primes(maximum_value):
    list_of_values = [True] * maximum_value
    list_of_values[0] = list_of_values[1] = False 

    for index, isprime in enumerate(list_of_values):
        if isprime:
            for index_multiple in range(2 * index, maximum_value, index):
                list_of_values[index_multiple] = False 
    list_of_primes = [index for index, value in enumerate(list_of_values) if value == True]
    
    return list_of_primes


def check_if_prime(number_to_factor):
    primes = create_list_of_primes(number_to_factor)
    for p in reversed(primes):
        if (number_to_factor % p == 0):
            return p 

    return -1

    
def solve_problem(number_to_factor):
    largest_prime = check_if_prime(number_to_factor)

    return(largest_prime)


if __name__ == "__main__":
    NUMBER_TO_FACTOR = 600851475143
    #NUMBER_TO_FACTOR = 214    # 107 largest prime factor
    #NUMBER_TO_FACTOR = 20     # 5 largest prime factor

    print(solve_problem(NUMBER_TO_FACTOR))
